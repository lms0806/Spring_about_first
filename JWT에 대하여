JWT = Json Web Token

★ 중요 : 왜 사용되고, 어디에 사용되는지!

<세션>
세션 웹사이트 로그인 순서
최초 로그인 - 세션 정보가 없으므로 세션에 정보 저장 - 클라이언트에 response(세션ID) 전달 (클라이언트에 세션 ID 저장) - 
다시 로그인 요청 - 로그인 요청 아이디를 보냄 - DB에서 값이 있는지 확인 - 세션 아이디에 DB에 있는 유저 정보를 저장함 - 원하는 페이지로 이동시킴 - 
세션 아이디로 유저 정보 요청 - 세션에 값이 있는지 확인 - DB에서 데이터 정보를 응답받음 - response를 클라이언트에 전달
 
세션의 단점 : 서버 하나당 하나의 세션이 있는 경우가 보통인데, 서버가 여러개가 있고 load 밸련싱이 일어날 경우 여러 서버마다 세션에 저장된 값이 달라 최초 로그인으로 인식할 수 있다.
이러한 문제점을 방지하기 위한 방법으로 여러 서버들을 하나의 DB에 값을 저장하여 쓰는 방식 있는데, 하드디스크를 이용하면 I/O가 일어나 속도가 엄청 느려져 메모리 공유 서버를 사용하는 방식을 주로 사용하고 있다.

load 밸런싱 : 서버가 부하가 걸리지 않도록 1번 서버가 바쁠 경우 다른 서버로 값을 전달해서 처리하는 방법(부하 분산)
 
<TCP>
응용 계층 : 무엇이 실행되고 있는지
프리젠테이션 계층 : 암호화및 압축;
세션 계층 : 인증 체크
트랜스포트 계층 : TCP통신 / UDP 통신 결정
네트워크 계층 : IP
데이터 계층 : IP로 찾은 공유기의 컴퓨터들 중 원하는 곳을 찾아줌
물리 계층 : 실제 전송

TCP : 데이터를 보냈을 때 ACK라는 답변 신호를 받는다, 그러나 이러한 ACK 신호가 오지 않을 경우 ACK신호가 올 때까지 계속해서 신호를 재전송함, 신뢰성↑
ex) 아이디, 비밀번호 정보
UDP : 데이터를 계속해서 보냄, ACK 답변 신호가 없음, 신뢰성X, 속도↑, 사람이 이해할 수 있는 것들
ex) 전화, 동영상

